@page "/registration"

@using Tewr.Blazor.FileReader

@inject RegistrationService _registration
@inject NavigationManager _navigation
@inject ClubNamesService _clubNamesService
@inject ImageLoader _imageLoader

@inject IFileReaderService fileReaderService

<!-----------------------------------nav----------------------------------------->
<header>
    <div class="header-wrapper">
        <div class="img">
            <img src="./image/gllg.png" alt="">
        </div>
        <div class="text-wrapper">
            <h3>
                @*<b>AchiveClub</b> for <m>It_Club</m>*@
                <b>Система достижений</b>
            </h3>
        </div>
    </div>
</header>
<!-----------------------------------main----------------------------------------->
<main>
    <div class="content-wrapper">
        <div class="headingWrapper">
            <h3>Зарегистрироваться</h3>
        </div>
        <div class="registerForm">
            <hr />
            <p><a @onclick="ToLogin">Войти в систему</a></p>
        </div>
        <div class="emailForm">
            <span>Имя</span>
            <input type="text" name="" @bind-value="_registrationParams.FirstName">
        </div>
        <div class="emailForm">
            <span>Фамилия</span>
            <input type="text" name="" @bind-value="_registrationParams.LastName">
        </div>
        <div class="emailForm">
            <span>Email</span>
            <input type="email" name="" @bind-value="_registrationParams.Email">
        </div>
        <div class="emailForm">
            <span>Фотография</span>
            <div class="input__file-cont">
                <input @ref=inputTypeFileElement @onchange=@LoadFiles type="file" class="input__file" id="input__file" accept="image/jpeg,image/png,image/webp" />
                <label for="input__file" class="input__file-button">
                    <span class="input__file-icon-wrapper">
                        @*<img class="input__file-icon" src="\image\upload.png" alt="Выбрать файл">*@
                        <i class="fa-solid fa-file-image"></i>
                    </span>
                    <span class="input__file-button-text">Выберите файл</span>
                </label>
            </div>
            @if (_avatarImageProcessed)
            {
                <div id="inputFileImg-cont">
                    <img src=@_registrationParams.Avatar style="border-radius:50%; width:200px; height:200px; margin: 0 auto" />
                </div>
            }
        </div>
        <div class="emailForm">
            <span>Место обучения</span>
            <select @bind="_registrationParams.ClubId">
                @if (_clubNames != null)
                {
                    @foreach (var clubName in _clubNames)
                    {
                        <option value="@clubName.Id">@clubName.Title</option>
                    }
                }
            </select>
        </div>
        <div class="passwordForm">
            <span>Пароль</span>
            <input type="password" name="" @bind-value="_registrationParams.Password">
        </div>
        <div class="passwordForm">
            <span>Подтверждение пароля</span>
            <input type="password" name="" @bind-value="_passwordSubmit">
        </div>
        <div class="submitButton">
            <button type="submit" @onclick="Registrate">Регистрация</button>
        </div>
        <p style="color:red;">@_resultMessage</p>
    </div>
</main>

@code
{
    private ElementReference inputTypeFileElement;

    private bool _avatarImageProcessed = false;

    private string _resultMessage = "";
    private string _passwordSubmit = "";

    private RegisterParams _registrationParams = new RegisterParams();

    private List<ClubNameInfo> _clubNames;

    protected override void OnInitialized()
    {
        GetClubNames();
    }

    private void GetClubNames()
    {
        _clubNames = _clubNamesService.GetAll();
    }

    private async Task Registrate()
    {
        if (string.IsNullOrWhiteSpace(_registrationParams.FirstName))
        {
            _resultMessage = "Введите имя!";
        }
        else if (string.IsNullOrWhiteSpace(_registrationParams.LastName))
        {
            _resultMessage = "Введите фамилию!";
        }
        else if (string.IsNullOrWhiteSpace(_registrationParams.Email) || _registrationParams.Email.Contains("@") == false)
        {
            _resultMessage = "Введите электронную почту!";
        }
        else if (string.IsNullOrWhiteSpace(_registrationParams.Avatar))
        {
            _resultMessage = "Загрузите свою фотографию!";
        }
        else if (_registrationParams.ClubId < 1)
        {
            _resultMessage = "Выберите клуб!";
        }
        else if (string.IsNullOrWhiteSpace(_registrationParams.Password))
        {
            _resultMessage = "Введите пароль!";
        }
        else if (_registrationParams.Password != _passwordSubmit)
        {
            _resultMessage = "Пароли не совпадают!";
        }
        else
        {
            if (await _registration.Registrate(_registrationParams))
            {
                _resultMessage = "Вы вошли! Перенаправление на вашу страницу...";
                _navigation.NavigateTo("/");
            }
            else
            {
                _resultMessage = "Ошибка регистрации. Возможно пользователь с таким Email уже зарегистрирован!";
            }
        }

    }

    private async Task LoadFiles()
    {
        _avatarImageProcessed = false;
        try
        {
            var file = await fileReaderService.CreateReference(inputTypeFileElement).EnumerateFilesAsync();
            _registrationParams.Avatar = await _imageLoader.CreateImage(file.First(), "avatars");
            _avatarImageProcessed = true;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private void ToLogin()
    {
        _navigation.NavigateTo("/login");
    }
}