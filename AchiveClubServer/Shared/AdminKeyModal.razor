@* <div class="adminKeyinput">
    <p class="modalInfo"><b>Пользователь:</b>&nbsp;@UserFullName</p>
    <p class="modalInfo"><b>Достижение:</b>&nbsp;@AchieveTitle</p>
    <input type="password" autocomplete="off" placeholder="...ключ тренера..." @bind-value="_message" />
    <div class="buttons">
        <button id="buttonSubmit" @onclick="SubmitForm">Подтвердить</button>
    </div>
</div>

@code {

    // [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
    [Parameter] public string UserFullName { get; set; }
    [Parameter] public string AchieveTitle { get; set; }


    private string _message;

    void SubmitForm() => BlazoredModal.CloseAsync(ModalResult.Ok(_message));
} *@

<MudDialog>
    <DialogContent>
        <div class="adminKeyinput">
            <p class="modalInfo"><b>Пользователь:</b>&nbsp;@UserFullName</p>
            <p class="modalInfo"><b>Достижение:</b>&nbsp;@AchieveTitle</p>
            <MudTextField Style="height:55px;" @bind-Value="_message" Label="Ключ тренера" Variant="Variant.Outlined" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ButtonPassClick" AdornmentAriaLabel="Show Password" />
            
            <div class="buttons">
                <button id="buttonCancel" @onclick="Cancel">Отменить</button>
                <button id="buttonSubmit" @onclick="Submit">Подтвердить</button>
            </div>
        </div>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public string UserFullName { get; set; }
    [Parameter] public string AchieveTitle { get; set; }

    private string _message;

    void Submit() => MudDialog.Close(DialogResult.Ok(_message));
    void Cancel() => MudDialog.Cancel();

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ButtonPassClick()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }
}

